/*
 * TiePointInterpolatorTest.cpp
 *
 *  Created on: Aug 30, 2011
 *      Author: ralf
 */

#include "TiePointInterpolatorTest.h"

CPPUNIT_TEST_SUITE_REGISTRATION(TiePointInterpolatorTest);

TiePointInterpolatorTest::TiePointInterpolatorTest() {
}

TiePointInterpolatorTest::~TiePointInterpolatorTest() {
}

void TiePointInterpolatorTest::setUp() {
	const int32_t lats[385] = { 61804688, 61793992, 61782520, 61770268,
			61757244, 61743444, 61728872, 61713524, 61697408, 61680520,
			61662868, 61644448, 61625260, 61605308, 61584596, 61563124,
			61540892, 61517904, 61494160, 61469664, 61444416, 61418416,
			61391672, 61364180, 61335948, 61306976, 61277264, 61246812,
			61215632, 61183716, 61151072, 61117700, 61083608, 61048792,
			61013256, 60977004, 60940040, 60902364, 60863976, 60824888,
			60785096, 60744604, 60703416, 60661532, 60618960, 60575696,
			60531752, 60487120, 60441816, 60395832, 60349176, 60301852,
			60253864, 60205208, 60155896, 60105928, 60055304, 60004032,
			59952112, 59899552, 59846352, 59792512, 59738040, 59682940,
			59627216, 59570864, 59513896, 59456312, 59398116, 59339312,
			59279904, 59219888, 59159280, 59098072, 59036280, 58973896,
			58910928, 61640072, 61629312, 61617780, 61605476, 61592400,
			61578556, 61563944, 61548568, 61532424, 61515512, 61497840,
			61479408, 61460216, 61440264, 61419556, 61398092, 61375872,
			61352904, 61329184, 61304720, 61279504, 61253544, 61226844,
			61199404, 61171224, 61142312, 61112664, 61082280, 61051172,
			61019336, 60986776, 60953496, 60919492, 60884772, 60849340,
			60813192, 60776340, 60738776, 60700512, 60661548, 60621884,
			60581524, 60540472, 60498732, 60456304, 60413192, 60369396,
			60324928, 60279780, 60233964, 60187480, 60140328, 60092512,
			60044040, 59994912, 59945132, 59894700, 59843624, 59791904,
			59739544, 59686548, 59632920, 59578660, 59523776, 59468268,
			59412144, 59355400, 59298044, 59240080, 59181508, 59122336,
			59062560, 59002196, 58941236, 58879688, 58817556, 58754840,
			61476540, 61465712, 61454120, 61441760, 61428632, 61414744,
			61400092, 61384676, 61368504, 61351568, 61333880, 61315432,
			61296228, 61276272, 61255564, 61234104, 61211896, 61188944,
			61165248, 61140804, 61115620, 61089700, 61063040, 61035644,
			61007516, 60978656, 60949068, 60918752, 60887712, 60855952,
			60823472, 60790272, 60756356, 60721732, 60686396, 60650352,
			60613604, 60576152, 60538004, 60499156, 60459616, 60419384,
			60378464, 60336860, 60294572, 60251604, 60207960, 60163640,
			60118652, 60072992, 60026672, 59979688, 59932048, 59883752,
			59834800, 59785204, 59734960, 59684072, 59632544, 59580384,
			59527584, 59474160, 59420112, 59365436, 59310140, 59254232,
			59197708, 59140576, 59082832, 59024492, 58965552, 58906012,
			58845884, 58785164, 58723856, 58661972, 58599504, 61313548,
			61302652, 61290996, 61278576, 61265400, 61251464, 61236768,
			61221320, 61205112, 61188156, 61170440, 61151980, 61132764,
			61112804, 61092096, 61070640, 61048444, 61025504, 61001824,
			60977408, 60952252, 60926364, 60899744, 60872392, 60844312,
			60815508, 60785976, 60755724, 60724752, 60693064, 60660656,
			60627540, 60593712, 60559176, 60523936, 60487992, 60451344,
			60414004, 60375964, 60337236, 60297816, 60257708, 60216920,
			60175448, 60133296, 60090468, 60046968, 60002800, 59957964,
			59912464, 59866304, 59819488, 59772012, 59723888, 59675116,
			59625696, 59575636, 59524936, 59473596, 59421628, 59369028,
			59315804, 59261956, 59207488, 59152404, 59096704, 59040400,
			58983484, 58925968, 58867848, 58809136, 58749832, 58689932,
			58629448, 58568384, 58506740, 58444516, 61150068, 61139108,
			61127392, 61114920, 61101696, 61087712, 61072980, 61057496,
			61041264, 61024280, 61006548, 60988072, 60968848, 60948884,
			60928176, 60906732, 60884544, 60861624, 60837964, 60813576,
			60788452, 60762600, 60736020, 60708712, 60680684, 60651932,
			60622464, 60592272, 60561372, 60529756, 60497428, 60464392,
			60430656, 60396208, 60361064, 60325220, 60288680, 60251448,
			60213524, 60174912, 60135616, 60095636, 60054976, 60013636,
			59971624, 59928944, 59885588, 59841572, 59796888, 59751548,
			59705548, 59658896, 59611592, 59563640, 59515044, 59465804,
			59415928, 59365416, 59314268, 59262496, 59210092, 59157068,
			59103424, 59049164, 58994288, 58938804, 58882712, 58826020,
			58768724, 58710832, 58652348, 58593272, 58533612, 58473364,
			58412536, 58351136, 58289160 };
	const int32_t lons[385] = { -4844517, -4517668, -4191054, -3864692,
			-3538597, -3212786, -2887275, -2562079, -2237215, -1912697,
			-1588542, -1264765, -941380, -618404, -295851, 26264, 347927,
			669122, 989835, 1310052, 1629758, 1948941, 2267585, 2585677,
			2903204, 3220153, 3536509, 3852261, 4167396, 4481900, 4795761,
			5108968, 5421508, 5733369, 6044539, 6355008, 6664763, 6973794,
			7282090, 7589639, 7896433, 8202460, 8507710, 8812173, 9115840,
			9418701, 9720747, 10021969, 10322359, 10621906, 10920604, 11218443,
			11515416, 11811516, 12106733, 12401062, 12694494, 12987024,
			13278643, 13569346, 13859126, 14147977, 14435893, 14722868,
			15008897, 15293974, 15578095, 15861253, 16143445, 16424666,
			16704912, 16984176, 17262460, 17539752, 17816056, 18091364,
			18365674, -4868291, -4543190, -4218322, -3893704, -3569352,
			-3245281, -2921507, -2598045, -2274911, -1952120, -1629687,
			-1307628, -985957, -664690, -343840, -23424, 296546, 616054, 935087,
			1253630, 1571669, 1889192, 2206183, 2522630, 2838520, 3153839,
			3468574, 3782714, 4096244, 4409153, 4721429, 5033059, 5344032,
			5654336, 5963959, 6272891, 6581120, 6888635, 7195426, 7501481,
			7806791, 8111346, 8415135, 8718150, 9020380, 9321815, 9622448,
			9922269, 10221269, 10519440, 10816773, 11113261, 11408895, 11703668,
			11997573, 12290601, 12582746, 12874001, 13164360, 13453815,
			13742361, 14029991, 14316700, 14602481, 14887330, 15171241,
			15454208, 15736228, 16017294, 16297403, 16576551, 16854732,
			17131944, 17408180, 17683440, 17957720, 18231016, -4891099,
			-4567713, -4244560, -3921654, -3599012, -3276649, -2954580,
			-2632820, -2311385, -1990290, -1669549, -1349177, -1029190, -709601,
			-390425, -71676, 246631, 564482, 881864, 1198763, 1515164, 1831055,
			2146422, 2461253, 2775533, 3089251, 3402393, 3714947, 4026900,
			4338241, 4648958, 4959038, 5268470, 5577243, 5885345, 6192765,
			6499492, 6805515, 7110825, 7415410, 7719260, 8022366, 8324718,
			8626306, 8927121, 9227153, 9526394, 9824834, 10122466, 10419281,
			10715270, 11010426, 11304740, 11598206, 11890816, 12182562,
			12473438, 12763437, 13052552, 13340777, 13628105, 13914531,
			14200048, 14484651, 14768335, 15051094, 15332923, 15613817,
			15893772, 16172783, 16450845, 16727955, 17004108, 17279302,
			17553532, 17826792, 18099084, -4913681, -4591985, -4270520,
			-3949301, -3628344, -3307663, -2987274, -2667191, -2347429,
			-2028004, -1708929, -1390220, -1071890, -753954, -436427, -119322,
			197347, 513566, 829321, 1144599, 1459387, 1773671, 2087437, 2400674,
			2713369, 3025508, 3337079, 3648071, 3958470, 4268265, 4577444,
			4885996, 5193909, 5501172, 5807773, 6113702, 6418948, 6723500,
			7027349, 7330484, 7632894, 7934571, 8235504, 8535684, 8835102,
			9133749, 9431616, 9728694, 10024975, 10320450, 10615112, 10908953,
			11201964, 11494139, 11785470, 12075950, 12365572, 12654329,
			12942215, 13229223, 13515348, 13800583, 14084922, 14368360,
			14650892, 14932512, 15213215, 15492996, 15771851, 16049775,
			16326764, 16602813, 16877920, 17152078, 17425288, 17697540,
			17968836, -4937571, -4617549, -4297757, -3978209, -3658920,
			-3339906, -3021180, -2702758, -2384654, -2066883, -1749459,
			-1432396, -1115709, -799411, -483516, -168039, 147008, 461610,
			775754, 1089428, 1402617, 1715308, 2027490, 2339149, 2650273,
			2960849, 3270864, 3580308, 3889168, 4197432, 4505089, 4812127,
			5118535, 5424302, 5729417, 6033869, 6337648, 6640743, 6943145,
			7244842, 7545826, 7846087, 8145614, 8444400, 8742434, 9039708,
			9336214, 9631942, 9926884, 10221033, 10514379, 10806916, 11098636,
			11389531, 11679595, 11968819, 12257198, 12544724, 12831392,
			13117194, 13402125, 13686179, 13969350, 14251633, 14533022,
			14813512, 15093098, 15371775, 15649539, 15926385, 16202308,
			16477305, 16751372, 17024504, 17296700, 17567952, 17838264 };

	valarray<double> latArray(60000 * 5 * 740);
	valarray<double> lonArray(60000 * 5 * 740);
	for (size_t i = 0; i < 60000 * 5 * 740; i++) {
		latArray[i] = lats[i % 385] * 1.0e-6;
		lonArray[i] = lons[i % 385] * 1.0e-6;
	}

	tpi = new TiePointInterpolator<double>(lonArray, latArray);
}


void TiePointInterpolatorTest::tearDown() {
	delete tpi;
}

void TiePointInterpolatorTest::testWeightsAndIndexesForIntermediatePoint() {
	valarray<double> w(4);
	valarray<size_t> i(4);

	tpi->prepare(-3.538597, 61.757240, w, i);

	CPPUNIT_ASSERT(w[0] != 1.0);
	CPPUNIT_ASSERT(w[1] != 0.0);
	CPPUNIT_ASSERT(w[2] != 0.0);
	CPPUNIT_ASSERT(w[3] != 0.0);
	CPPUNIT_ASSERT(w[0] + w[1] + w[2] + w[3] == 1.0);

	CPPUNIT_ASSERT(i[0] == 4);
	CPPUNIT_ASSERT(i[1] == 5);
	CPPUNIT_ASSERT(i[2] == 3);
	CPPUNIT_ASSERT(i[3] == 81);
}

void TiePointInterpolatorTest::testWeightsAndIndexesForTiePointLocation() {
	valarray<double> w(4);
	valarray<size_t> i(4);

	tpi->prepare(-3.538597, 61.757244, w, i);

	CPPUNIT_ASSERT(w[0] == 1.0);
	CPPUNIT_ASSERT(w[1] == 0.0);
	CPPUNIT_ASSERT(w[2] == 0.0);
	CPPUNIT_ASSERT(w[3] == 0.0);

	CPPUNIT_ASSERT(i[0] == 4);
	CPPUNIT_ASSERT(i[1] == 3);
	CPPUNIT_ASSERT(i[2] == 5);
	CPPUNIT_ASSERT(i[3] == 81);
}

void TiePointInterpolatorTest::testInterpolation() {
	valarray<double> f(4);
	valarray<double> w(4);
	valarray<size_t> i(4);

	f[0] = 1.0;
	f[1] = 2.0;
	f[2] = 3.0;
	f[3] = 4.0;

	w[0] = 1.0;
	w[1] = 0.0;
	w[2] = 0.0;
	w[3] = 0.0;

	i[0] = 0;
	i[1] = 1;
	i[2] = 2;
	i[3] = 3;

	CPPUNIT_ASSERT(tpi->interpolate(f, w, i) == 1.0);

	w[0] = 0.0;
	w[1] = 1.0;

	CPPUNIT_ASSERT(tpi->interpolate(f, w, i) == 2.0);

	w[1] = 0.0;
	w[2] = 1.0;

	CPPUNIT_ASSERT(tpi->interpolate(f, w, i) == 3.0);

	w[2] = 0.0;
	w[3] = 1.0;

	CPPUNIT_ASSERT(tpi->interpolate(f, w, i) == 4.0);
}

